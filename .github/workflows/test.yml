#
# Copyright 2019-2024 The Z3-TurnKey Authors
# SPDX-License-Identifier: ISC
#
# Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby
# granted, provided that the above copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
# AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#

name: License Check and Multi-Platform Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  JDK_VERSION: 17

jobs:
  safety-check:
    name: Check for modified Gradle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle artifacts
        uses: gradle/wrapper-validation-action@v3

  spotless:
    name: Run Spotless
    needs: safety-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JDK_VERSION }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          dependency-graph: generate-and-submit

      - name: Run Spotless checks
        run: ./gradlew spotlessCheck

  test-runner:
    name: Build JUnit Test Runner
    needs: safety-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JDK_VERSION }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          dependency-graph: generate-and-submit

      - name: Identify install_name_tool name
        shell: bash
        run: |
          cd /usr/bin
          tools=( llvm-install-name-tool-* )
          echo "ORG_GRADLE_PROJECT_install_name_tool=${tools[-1]}" >> "${GITHUB_ENV}"

      - name: Build Test Runner Jar
        run: |
          ./gradlew testRunner versionFile
          cp build/z3.version build/libs/z3-turnkey-*-test-runner.jar .

      - name: Upload Test Runner Jar
        uses: actions/upload-artifact@v4
        with:
          name: test-runner
          path: |
            z3-turnkey-*-test-runner.jar
            z3.version

  test:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        java-package: [ liberica, microsoft, temurin, zulu ]
        java-version: [ 8, 11, 17, 21 ]
        architecture: [ x64 ]
        exclude:
          - java-package: microsoft
            java-version: 8
      fail-fast: false # Ensure we get all failures on all affected platforms

    name: JUnit Test on ${{ matrix.os }} and ${{ matrix.java-package }} version ${{ matrix.java-version }} for ${{ matrix.architecture }}
    needs: test-runner
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download Test Runner Jar
        uses: actions/download-artifact@v4
        with:
          name: test-runner

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.java-package }}
          java-version: ${{ matrix.java-version }}
          architecture: ${{ matrix.architecture }}

      - name: Run tests
        shell: bash
        run: |
          z3version="$(cat z3.version)"
          prefix=""
          if ! command -v arch &> /dev/null; then
            case "${{ matrix.architecture }}" in
              "aarch64") prefix="arch -arm64";;
              "x64") prefix="arch -x86_64";;
              *) echo "unknown architecture ${{ matrix.architecture }}"; exit 1;;
            esac
          fi
          ${prefix} java -DexpectedZ3Version="${z3version}" \
                         -jar z3-turnkey-*-test-runner.jar \
                         execute --fail-if-no-tests \
                                 --select-package tools.aqua.z3turnkey \
                                 --reports-dir test-results
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          require_tests: true
          report_paths: 'test-results/*.xml'
